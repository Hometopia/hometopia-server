server:
  port: 8010
  servlet:
    context-path: /core

spring:
  application:
    name: core-service
  profiles:
    active: dev
  config:
    import: vault://
  cloud:
    consul:
      host: ${CONSUL_HOST}
      port: ${CONSUL_PORT}
      discovery:
        instance-id: ${spring.application.name}:${random.value}
        health-check-path: ${server.servlet.context-path}/actuator/health
        health-check-interval: 30s
        acl-token: ${CONSUL_TOKEN}
        fail-fast: false
        prefer-ip-address: true
        query-passing: true
    vault:
      kv:
        enabled: true
        default-context: ${spring.application.name}
        backend: hometopia
      authentication: token
      token: ${VAULT_TOKEN}
      scheme: ${VAULT_SCHEME}
      host: ${VAULT_HOST}
      port: ${VAULT_PORT}
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/core_service
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    open-in-view: false
  sql:
    init:
      mode: never

logging:
  level:
#    web: trace
    org.hibernate.orm.jdbc.bind: trace
    net.ttddyy.dsproxy.listener: debug

decorator:
  datasource:
    datasource-proxy:
      logging: slf4j
      multiline: true
      format-sql: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  #  zipkin:
  #    tracing:
  #      endpoint: http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

keycloak:
  url: ${KC_URI}
  realm:
    master: ${KC_REALM_MASTER}
    hometopia: ${KC_REALM_HOMETOPIA}
  client:
    admin-cli: ${KC_ADMIN_CLI_CLIENT}
    hometopia: ${KC_HOMETOPIA_CLIENT}
  admin:
    username: ${KC_ADMIN_USERNAME}
    password: ${KC_ADMIN_PASSWORD}

grpc:
  client:
    rule-service:
      address: rule-service
      enable-keep-alive: true
      keep-alive-without-calls: true
      negotiation-type: plaintext
